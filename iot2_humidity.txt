#include <DHT.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include <ThingSpeak.h>

// Constants for DHT11 sensor
#define DHTPIN 2  // Pin where the DHT11 is connected
#define DHTTYPE DHT11  // DHT 11

// Constants for Wi-Fi
										const char *ssid = "Wokwi-GUEST";
										const char *password = "";

// Constants for Thingspeak
										const char *thingspeakApiKey = "87A46IPIZGT6A4ST";
const char *thingspeakHost = "http://api.thingspeak.com/update";
WiFiClient client;

DHT dht(DHTPIN, DHTTYPE);

void setup() {
  Serial.begin(115200);
  dht.begin();

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Initialize Thingspeak
  ThingSpeak.begin(client);
}

void loop() {
  // Read humidity and temperature from DHT11 sensor
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Check if readings are valid
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    delay(2000);
    return;
  }

  // Print sensor data to Serial Monitor
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.print("%\t");
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println("Â°C");

  // Send data to Thingspeak
  ThingSpeak.setField(1, humidity);
  ThingSpeak.setField(2, temperature);
  									int httpCode = ThingSpeak.writeFields(2305228,"87A46IPIZGT6A4ST");
  
  // Check for successful update
  if (httpCode == 200) {
    Serial.println("Data sent to Thingspeak successfully");
  } else {
    Serial.println("Error sending data to Thingspeak. HTTP code: " + String(httpCode));
  }

  // Wait for 20 seconds before sending the next data
  delay(200);
}
